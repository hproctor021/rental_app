{"ast":null,"code":"import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { homeListReducer, homeDetailsReducer } from './reducers/homeReducers';\nimport { userLoginReducer } from './reducers/userReducers';\nconst reducer = combineReducers({\n  listHomes: homeListReducer,\n  userLogin: userLoginReducer,\n  homeDetails: homeDetailsReducer\n});\nconst userInfoFromStorage = localStorage.getItem('userInfo') ? JSON.parse(localStorage.getItem('userInfo')) : null;\nconst initialState = {\n  userLogin: {\n    userInfo: userInfoFromStorage\n  }\n};\nconst middleware = [thunk];\nconst store = createStore(reducer, initialState, composeWithDevTools(applyMiddleware(...middleware)));\nexport default store;","map":{"version":3,"sources":["/Users/hproc/Flatiron/code/Mod_5/rental_app/frontend/src/store.js"],"names":["createStore","combineReducers","applyMiddleware","thunk","composeWithDevTools","homeListReducer","homeDetailsReducer","userLoginReducer","reducer","listHomes","userLogin","homeDetails","userInfoFromStorage","localStorage","getItem","JSON","parse","initialState","userInfo","middleware","store"],"mappings":"AACA,SAAQA,WAAR,EAAqBC,eAArB,EAAsCC,eAAtC,QAA4D,OAA5D;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAAQC,mBAAR,QAAkC,0BAAlC;AACA,SAASC,eAAT,EAA0BC,kBAA1B,QAAoD,yBAApD;AACA,SAASC,gBAAT,QAAiC,yBAAjC;AAGA,MAAMC,OAAO,GAAGP,eAAe,CAAC;AAC5BQ,EAAAA,SAAS,EAAEJ,eADiB;AAE5BK,EAAAA,SAAS,EAAEH,gBAFiB;AAG5BI,EAAAA,WAAW,EAAEL;AAHe,CAAD,CAA/B;AAMA,MAAMM,mBAAmB,GAAGC,YAAY,CAACC,OAAb,CAAqB,UAArB,IAC1BC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAX,CAD0B,GAE1B,IAFF;AAIA,MAAMG,YAAY,GAAG;AACnBP,EAAAA,SAAS,EAAE;AAAEQ,IAAAA,QAAQ,EAAEN;AAAZ;AADQ,CAArB;AAIA,MAAMO,UAAU,GAAG,CAAChB,KAAD,CAAnB;AACA,MAAMiB,KAAK,GAAGpB,WAAW,CAACQ,OAAD,EAAUS,YAAV,EAAwBb,mBAAmB,CAACF,eAAe,CAAC,GAAGiB,UAAJ,CAAhB,CAA3C,CAAzB;AAIA,eAAeC,KAAf","sourcesContent":["\nimport {createStore, combineReducers, applyMiddleware} from 'redux'\nimport thunk from 'redux-thunk';\nimport {composeWithDevTools} from 'redux-devtools-extension'\nimport { homeListReducer, homeDetailsReducer } from './reducers/homeReducers'\nimport { userLoginReducer } from './reducers/userReducers'\n\n\nconst reducer = combineReducers({\n    listHomes: homeListReducer,\n    userLogin: userLoginReducer,\n    homeDetails: homeDetailsReducer\n})\n\nconst userInfoFromStorage = localStorage.getItem('userInfo')\n? JSON.parse(localStorage.getItem('userInfo'))\n: null\n\nconst initialState = {\n  userLogin: { userInfo: userInfoFromStorage}\n}\n\nconst middleware = [thunk]\nconst store = createStore(reducer, initialState, composeWithDevTools(applyMiddleware(...middleware)))\n\n\n\nexport default store;"]},"metadata":{},"sourceType":"module"}