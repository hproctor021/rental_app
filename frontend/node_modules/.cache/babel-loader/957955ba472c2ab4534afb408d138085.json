{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/hproc/Flatiron/code/Mod_5/rental_app/frontend/src/components/FeaturesCards.js\",\n    _s = $RefreshSig$();\n\nimport { CardGroup, Card, Image, Row, Col, Jumbotron, Button } from 'react-bootstrap';\nimport React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { LinkContainer } from 'react-router-bootstrap';\n\nfunction FeaturesCards({\n  home\n}) {\n  _s();\n\n  const dispatch = useDispatch();\n  const lHomes = useSelector(state => state.homes);\n  useEffect(() => {\n    fetch('http://localhost:3000/api/v1/homes').then(res => res.json()).then(homes => {\n      dispatch({\n        type: 'SET_ALL_HOMES',\n        homes: homes\n      });\n    });\n  }, [dispatch]);\n\n  function renderCards() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [lHomes.find(home => home.id === 2), /*#__PURE__*/_jsxDEV(Card, {\n        children: /*#__PURE__*/_jsxDEV(Card.Img, {\n          src: home.photos[2].image\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: lHomes ? renderCards() : null\n  }, void 0, false);\n}\n\n_s(FeaturesCards, \"RnDBLHPefoKB2VgDivw1OE7sVAA=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = FeaturesCards;\nexport default FeaturesCards;\n\nvar _c;\n\n$RefreshReg$(_c, \"FeaturesCards\");","map":{"version":3,"sources":["/Users/hproc/Flatiron/code/Mod_5/rental_app/frontend/src/components/FeaturesCards.js"],"names":["CardGroup","Card","Image","Row","Col","Jumbotron","Button","React","useState","useEffect","useDispatch","useSelector","LinkContainer","FeaturesCards","home","dispatch","lHomes","state","homes","fetch","then","res","json","type","renderCards","find","id","photos","image"],"mappings":";;;;;;AAAA,SAASA,SAAT,EAAoBC,IAApB,EAA0BC,KAA1B,EAAiCC,GAAjC,EAAsCC,GAAtC,EAA2CC,SAA3C,EAAsDC,MAAtD,QAAoE,iBAApE;AACA,OAAOC,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,aAAT,QAA8B,wBAA9B;;AAGA,SAASC,aAAT,CAAwB;AAAEC,EAAAA;AAAF,CAAxB,EAAkC;AAAA;;AAE9B,QAAMC,QAAQ,GAAGL,WAAW,EAA5B;AACA,QAAMM,MAAM,GAAGL,WAAW,CAACM,KAAK,IAAIA,KAAK,CAACC,KAAhB,CAA1B;AAEAT,EAAAA,SAAS,CAAC,MAAM;AACZU,IAAAA,KAAK,CAAC,oCAAD,CAAL,CACCC,IADD,CACMC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADb,EAECF,IAFD,CAEMF,KAAK,IAAI;AACXH,MAAAA,QAAQ,CAAC;AACLQ,QAAAA,IAAI,EAAE,eADD;AAELL,QAAAA,KAAK,EAAEA;AAFF,OAAD,CAAR;AAIH,KAPD;AAQF,GATO,EASL,CAACH,QAAD,CATK,CAAT;;AAYA,WAASS,WAAT,GAAuB;AACnB,wBACI;AAAA,iBACCR,MAAM,CAACS,IAAP,CAAYX,IAAI,IAAIA,IAAI,CAACY,EAAL,KAAY,CAAhC,CADD,eAEI,QAAC,IAAD;AAAA,+BACI,QAAC,IAAD,CAAM,GAAN;AAAU,UAAA,GAAG,EAAEZ,IAAI,CAACa,MAAL,CAAY,CAAZ,EAAeC;AAA9B;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA,oBADJ;AA0BF;;AAEF,sBACI;AAAA,cAeKZ,MAAM,GAAGQ,WAAW,EAAd,GAAmB;AAf9B,mBADJ;AAqBH;;GAnEQX,a;UAEYH,W,EACFC,W;;;KAHVE,a;AAqET,eAAeA,aAAf","sourcesContent":["import { CardGroup, Card, Image, Row, Col, Jumbotron, Button } from 'react-bootstrap'\nimport React, { useState, useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { LinkContainer } from 'react-router-bootstrap'\n\n\nfunction FeaturesCards ({ home }) {\n\n    const dispatch = useDispatch()\n    const lHomes = useSelector(state => state.homes)\n    \n    useEffect(() => {\n        fetch('http://localhost:3000/api/v1/homes')\n        .then(res => res.json())\n        .then(homes => {\n            dispatch({\n                type: 'SET_ALL_HOMES',\n                homes: homes\n            })\n        }\n    )}, [dispatch])\n\n\n    function renderCards() {\n        return (\n            <>\n            {lHomes.find(home => home.id === 2)}\n                <Card>\n                    <Card.Img src={home.photos[2].image} />\n                </Card>\n                \n            {/* {lHomes.map(home => (\n                <CardGroup fluid>   \n                    <Card class=\"container\">\n                        <Card.Img src={home.photos[2].image} />\n                        <div class=\"text-block\">\n                            <h4>Feature Homes</h4>\n                            <p>Click to explore more</p>\n                        </div>\n                    </Card>\n                    <Card class=\"container\">\n                        <Card.Img src={home.photos[3].image} />\n                        <div class=\"text-block\">\n                            <h4>Featured Home</h4>\n                            <p>Click to explore more</p>\n                        </div>\n                    </Card>\n                </CardGroup>\n            ))} */}\n            </>\n    )}\n\n    return (\n        <>\n            {/* <Jumbotron fluid>  \n                  {lHomes.map(home => (\n                    <Row>\n                        {home.id === 3 || home.id === 2\n                        ?   <Col sm={6}>\n                                <Card>\n                                    <Image src={home.photos[2].image} fluid />\n                                </Card>\n                            </Col>\n                        :   null\n                        }\n                    </Row>\n                  ))}\n            </Jumbotron> */}\n            {lHomes ? renderCards() : null}\n            \n            \n        </>\n    )\n}\n\nexport default FeaturesCards;"]},"metadata":{},"sourceType":"module"}